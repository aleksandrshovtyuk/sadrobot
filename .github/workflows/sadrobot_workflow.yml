name: sadrobot_workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          # python-version: ["3.9", "3.10", "3.11"]
          python-version: ["3.11"]
    env: 
      TEST_DB: 'True'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt
    - name: Test with flake8 and django tests
      run: |
        cd backend/
        python -m flake8
        python manage.py test --verbosity 2

  build_and_push_to_docker_hub:
    name: Build Docker image and push to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    env: 
      TEST_DB: ${{ secrets.TEST_DB }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./backend/
          tags: ${{ secrets.DOCKER_USERNAME }}/sadrobot

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        # passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          set -m
          cd sadrobot
          rm -f .env
          sudo touch .env
          sudo chmod 666 .env
          echo SECRET_KEY='${{ secrets.SECRET_KEY }}' >> .env
          echo DEBUG_MODE=${{ secrets.DEBUG_MODE }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          echo TEST_DB=${{ secrets.TEST_DB }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker compose stop
          sudo docker compose rm -f sadrobot
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/sadrobot
          sudo docker volume rm sadrobot_static_value
          sudo docker compose up -d
          sudo docker compose exec -T sadrobot python manage.py collectstatic --no-input
        #  sudo docker compose exec -T sadrobot python manage.py makemigrations
          sudo docker compose exec -T sadrobot python manage.py make migrate
          sudo docker image prune -f

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
